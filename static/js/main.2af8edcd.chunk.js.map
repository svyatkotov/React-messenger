{"version":3,"sources":["assets/images/icon.svg","components/ChatListItem/ChatListItem.tsx","components/ChatList/ChatList.tsx","components/MessageListItem/MessageListItem.tsx","components/MessageList/MessageList.tsx","components/Messenger/messengerData.ts","components/Messenger/Messenger.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","ChatListItem","chatId","name","lastMessageTime","lastMessageAuthor","lastMessagePreview","isActive","handleClick","className","onClick","src","icon","alt","getHours","getMinutes","ChatList","chatListItems","activeChatId","map","key","toString","MessageListItem","time","author","text","MessageList","messages","messageId","Date","messageListItems","Messenger","state","getChatListItems","item","getMessages","lastMessage","length","sort","aDate","bDate","getTime","setState","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2af8edcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.5d5d9eef.svg\";","import React from \"react\";\nimport { IChatListItem } from \"./types\";\nimport { THandleClick } from \"../Messenger/types\";\nimport icon from '../../assets/images/icon.svg';\nimport \"./ChatListItem.css\";\n\ninterface IProps extends IChatListItem {\n  isActive: boolean;\n  handleClick: THandleClick;\n}\n\nexport const ChatListItem: React.FC<IProps> = ({\n  chatId,\n  name,\n  lastMessageTime,\n  lastMessageAuthor,\n  lastMessagePreview,\n  isActive,\n  handleClick\n}) => {\n  return (\n    <li className={`chat-list-item ${isActive && \"active\"}`} onClick={handleClick(chatId)}>\n      <div className=\"chat-list-item__icon\">\n        <img src={icon} alt=\"icon\" />\n      </div>\n      <div className=\"chat-list-item__info\">\n        <div className=\"chat-list-item__title\">\n          <span className=\"chat-list-item__name\">{name}</span>\n          <span className=\"chat-list-item__time\">\n            {`${lastMessageTime.getHours() < 10 ? \"0\" : \"\"}${lastMessageTime.getHours()}:${lastMessageTime.getMinutes() < 10 ? \"0\" : \"\"}${lastMessageTime.getMinutes()}`}\n          </span>\n        </div>\n        <div className=\"chat-list-item__content\">\n          <span className=\"chat-list-item__author\">{`${lastMessageAuthor}:`}</span>\n          <span className=\"chat-list-item__message\">{lastMessagePreview}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { IChatList } from \"./types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport { ChatListItem } from \"../ChatListItem\";\nimport \"./ChatList.css\";\n\nexport const ChatList: React.FC<IChatList> = ({chatListItems, activeChatId, handleClick}) => {\n  return (\n    <ul className=\"chat-list\">\n      {chatListItems.map(({chatId, name, lastMessageTime, lastMessageAuthor, lastMessagePreview}: IChatListItem) => {\n        return (\n          <ChatListItem \n            key={chatId.toString()}\n            chatId={chatId}\n            name={name}\n            lastMessageTime={lastMessageTime}\n            lastMessageAuthor={lastMessageAuthor}\n            lastMessagePreview={lastMessagePreview}\n            isActive={activeChatId === chatId}\n            handleClick={handleClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};","import React from \"react\";\nimport { IMessageListItem } from \"./types\";\nimport icon from '../../assets/images/icon.svg';\nimport \"./MessageListItem.css\";\n\nexport const MessageListItem: React.FC<IMessageListItem> = ({\n  time,\n  author,\n  text\n}) => {\n  return (\n    <li className=\"message-list-item\">\n      <div className=\"message-list-item__icon\">\n        <img src={icon} alt=\"icon\" />\n      </div>\n      <div className=\"message-list-item__info\">\n        <div className=\"message-list-item__title\">\n          <div className=\"message-list-item__author\">{author}</div>\n          <div className=\"message-list-item__time\">\n            {`${time.getHours() < 10 ? \"0\" : \"\"}${time.getHours()}:${time.getMinutes() < 10 ? \"0\" : \"\"}${time.getMinutes()}`}\n          </div>\n        </div>\n        <div className=\"message-list-item__content\">{text}</div>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { IMessageList } from \"./types\";\nimport { IMessageListItem } from \"../MessageListItem/types\";\nimport { MessageListItem } from \"../MessageListItem\";\nimport \"./MessageList.css\";\n\nexport const MessageList: React.FC<IMessageList> = ({messages}) => {\n  return (\n    <ul className=\"message-list\">\n      {messages.map(({messageId, time, author, text}: IMessageListItem) => {\n        return (\n          <MessageListItem\n            key={messageId.toString()}\n            messageId={messageId}\n            time={time}\n            author={author}\n            text={text}\n          />\n        );\n      })}\n    </ul>\n  );\n}","import { IChatListItem } from \"../ChatListItem/types\";\nimport { IMessages } from \"../Messenger/types\";\n\nexport const chatListItems: IChatListItem[] = [\n  {\n    chatId: 1,\n    name: \"First chat\",\n    lastMessageTime: new Date(0),\n  },\n  {\n    chatId: 2,\n    name: \"Second chat\",\n    lastMessageTime: new Date(0),\n  },\n  {\n    chatId: 3,\n    name: \"Third chat\",\n    lastMessageTime: new Date(0),\n  },\n];\n\nexport const messages: IMessages[] = [\n  {\n    chatId: 1,\n    messageListItems: [\n      {\n        messageId: 1,\n        time: new Date(2020, 4, 12, 14, 36, 17),\n        author: \"Slava\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n      {\n        messageId: 2,\n        time: new Date(2020, 4, 12, 14, 5, 55),\n        author: \"Slava\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n      {\n        messageId: 3,\n        time: new Date(2020, 4, 12, 22, 15, 1),\n        author: \"Slava\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n    ],\n  },\n  {\n    chatId: 2,\n    messageListItems: [\n      {\n        messageId: 1,\n        time: new Date(2020, 4, 12, 8, 44, 33),\n        author: \"Noel\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n      {\n        messageId: 2,\n        time: new Date(2020, 4, 12, 11, 59, 17),\n        author: \"Noel\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n      {\n        messageId: 3,\n        time: new Date(2020, 4, 12, 6, 12, 34),\n        author: \"Noel\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n      {\n        messageId: 4,\n        time: new Date(2020, 4, 12, 14, 14, 59),\n        author: \"Noel\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      },\n    ],\n  },\n  {\n    chatId: 3,\n    messageListItems: [\n      {\n        messageId: 1,\n        time: new Date(2020, 4, 12, 23, 59, 45),\n        author: \"Vika\",\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n      }\n    ],\n  },\n];\n","import React, { Component } from \"react\";\nimport { IState, TChatId, THandleClick } from \"./types\";\nimport { IMessageListItem } from \"../MessageListItem/types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport { ChatList } from \"../ChatList\";\nimport { MessageList } from \"../MessageList\";\nimport { chatListItems, messages } from \"./messengerData\";\nimport \"./Messenger.css\";\n\nexport class Messenger extends Component {\n  readonly state: IState = {\n    activeChatId: null,\n    chatListItems: [],\n    messages: []\n  };\n\n  private getChatListItems = (chatListItems: IChatListItem[]): IChatListItem[] => {\n    chatListItems.map((item: IChatListItem): IChatListItem => {\n      if (item.chatId) {\n        const messages: IMessageListItem[] = this.getMessages(item.chatId);\n        const lastMessage: IMessageListItem = messages[messages.length - 1];\n\n        if (lastMessage) {\n          item.lastMessageTime = lastMessage.time;\n          item.lastMessageAuthor = lastMessage.author;\n          item.lastMessagePreview = lastMessage.text;\n        }\n      }\n\n      return item;\n    });\n    return chatListItems.sort((aDate, bDate) => bDate.lastMessageTime.getTime() - aDate.lastMessageTime.getTime());\n  };\n  \n  private getMessages = (chatId: TChatId): IMessageListItem[] => {\n    return messages[chatId - 1].messageListItems\n      .sort((aDate, bDate) => aDate.time.getTime() - bDate.time.getTime());\n  };\n\n  componentDidMount() {\n    this.setState({\n      chatListItems: this.getChatListItems(chatListItems)\n    });\n  }\n\n  private handleClick: THandleClick = (chatId) => {\n    return () => {\n      this.setState({\n        activeChatId: chatId,\n        messages: this.getMessages(chatId)\n      });\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"messenger\">\n        <ChatList \n          chatListItems={this.state.chatListItems}\n          activeChatId={this.state.activeChatId}\n          handleClick={this.handleClick}\n        />\n        <MessageList messages={this.state.messages}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Messenger } from \"../../components/Messenger\";\n\n\nexport const App: React.FC = () => <Messenger />;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { App } from \"./containers/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}