{"version":3,"sources":["assets/images/icon.svg","components/ChatListItem/ChatListItem.tsx","components/ChatList/ChatList.tsx","components/Message/Message.tsx","components/MessageList/MessageList.tsx","components/Messenger/messengerData.ts","components/Messenger/Messenger.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","ChatListItem","chatId","name","date","lastMessageAuthor","lastMessagePreview","isActive","handleClick","className","onClick","src","icon","alt","toLocaleDateString","ChatList","chatListItems","activeChatId","map","key","toString","Message","author","text","MessageList","messages","messageId","Date","Messenger","state","getChatListItems","item","getMessages","lastMessage","length","sort","aDate","bDate","getTime","filter","message","setState","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ebe3c66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.5d5d9eef.svg\";","import React from \"react\";\nimport { IChatListItem } from \"./types\";\nimport { THandleClick } from \"../Messenger/types\";\nimport icon from '../../assets/images/icon.svg';\nimport \"./ChatListItem.css\";\n\ninterface IProps extends IChatListItem {\n  isActive: boolean;\n  handleClick: THandleClick;\n}\n\nexport const ChatListItem: React.FC<IProps> = ({\n  chatId,\n  name,\n  date,\n  lastMessageAuthor,\n  lastMessagePreview,\n  isActive,\n  handleClick\n}) => {\n  return (\n    <li className={`chat-list-item ${isActive && \"active\"}`} onClick={handleClick(chatId)}>\n      <div className=\"chat-list-item__icon\">\n        <img src={icon} alt=\"icon\" />\n      </div>\n      <div className=\"chat-list-item__info\">\n        <div className=\"chat-list-item__title\">\n          <span className=\"chat-list-item__name\">{name}</span>\n          <span className=\"chat-list-item__date\">{date.toLocaleDateString()}</span>\n        </div>\n        <div className=\"chat-list-item__content\">\n          <span className=\"chat-list-item__author\">{`${lastMessageAuthor}:`}</span>\n          <span className=\"chat-list-item__message\">{lastMessagePreview}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { IChatList } from \"./types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport { ChatListItem } from \"../ChatListItem\";\nimport \"./ChatList.css\";\n\nexport const ChatList: React.FC<IChatList> = ({chatListItems, activeChatId, handleClick}) => {\n  return (\n    <ul className=\"chat-list\">\n      {chatListItems.map(({chatId, name, date, lastMessageAuthor, lastMessagePreview}: IChatListItem) => {\n        return (\n          <ChatListItem \n            key={chatId.toString()}\n            chatId={chatId}\n            name={name}\n            date={date}\n            lastMessageAuthor={lastMessageAuthor}\n            lastMessagePreview={lastMessagePreview}\n            isActive={activeChatId === chatId}\n            handleClick={handleClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};","import React from \"react\";\nimport { IMessage } from \"./types\";\nimport \"./Message.css\";\n\nexport const Message: React.FC<IMessage> = ({\n  date,\n  author,\n  text\n}) => {\n  return (\n    <li className=\"message\">\n      <div className=\"message__info\">\n        <div className=\"message__author\">{author}</div>\n        <div className=\"message__date\">{date.toLocaleDateString()}</div>\n      </div>\n      <div className=\"message__text\">{text}</div>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { IMessageList } from \"./types\";\nimport { IMessage } from \"../Message/types\";\nimport { Message } from \"../Message\";\nimport \"./MessageList.css\";\n\nexport const MessageList: React.FC<IMessageList> = ({messages}) => {\n  return (\n    <ul className=\"message-list\">\n      {messages.map(({chatId, messageId, date, author, text}: IMessage) => {\n        return (\n          <Message\n            key={messageId.toString()}\n            chatId={chatId}\n            messageId={messageId}\n            date={date}\n            author={author}\n            text={text}\n          />\n        );\n      })}\n    </ul>\n  );\n}","import { IChatListItem } from \"../ChatListItem/types\";\nimport { IMessage } from \"../Message/types\";\n\nexport const chatListItems: IChatListItem[] = [\n  {\n    chatId: 1,\n    name: \"First chat\",\n    date: new Date(2020, 4, 6),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 2,\n    name: \"Second chat\",\n    date: new Date(2020, 4, 7),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 3,\n    name: \"Third chat\",\n    date: new Date(2020, 4, 4),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 4,\n    name: \"Fourth chat\",\n    date: new Date(2020, 4, 2),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  }\n];\n\nexport const messages: IMessage[] = [\n  {\n    chatId: 1,\n    messageId: 1,\n    date: new Date(2020, 4, 6),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 1,\n    messageId: 2,\n    date: new Date(2020, 4, 1),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 1,\n    messageId: 3,\n    date: new Date(2020, 4, 3),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 2,\n    messageId: 1,\n    date: new Date(2020, 4, 6),\n    author: \"Artem\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 2,\n    messageId: 2,\n    date: new Date(2020, 4, 7),\n    author: \"Artem\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 1,\n    date: new Date(2020, 4, 4),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 2,\n    date: new Date(2020, 4, 3),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 3,\n    date: new Date(2020, 4, 2),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 4,\n    date: new Date(2020, 4, 1),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 4,\n    messageId: 1,\n    date: new Date(2020, 4, 2),\n    author: \"Vika\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  }\n];","import React, { Component } from \"react\";\nimport { IState, TChatId, THandleClick } from \"./types\";\nimport { IMessage } from \"../Message/types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport { ChatList } from \"../ChatList\";\nimport { MessageList } from \"../MessageList\";\nimport { chatListItems, messages } from \"./messengerData\";\nimport \"./Messenger.css\";\n\nexport class Messenger extends Component {\n  readonly state: IState = {\n    activeChatId: null,\n    chatListItems: [],\n    messages: []\n  };\n\n  private getChatListItems = (chatListItems: IChatListItem[]): IChatListItem[] => {\n    chatListItems.map((item: IChatListItem): IChatListItem => {\n      if (item.chatId) {\n        const messages: IMessage[] = this.getMessages(item.chatId);\n        const lastMessage: IMessage = messages[messages.length - 1];\n\n        if (lastMessage) {\n          item.lastMessageAuthor = lastMessage.author;\n          item.lastMessagePreview = lastMessage.text;\n        }\n      }\n\n      return item;\n    });\n    return chatListItems.sort((aDate, bDate) => bDate.date.getTime() - aDate.date.getTime());\n  };\n  \n  private getMessages = (chatId: TChatId): IMessage[] => {\n    return messages\n      .filter((message) => message.chatId === chatId)\n      .sort((aDate, bDate) => aDate.date.getTime() - bDate.date.getTime());\n  };\n\n  componentDidMount() {\n    this.setState({\n      chatListItems: this.getChatListItems(chatListItems)\n    });\n  }\n\n  private handleClick: THandleClick = (chatId) => {\n    const messages: IMessage[] = this.getMessages(chatId);\n    return () => {\n      this.setState({\n        activeChatId: chatId,\n        messages: messages\n      });\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"messenger\">\n        <ChatList \n          chatListItems={this.state.chatListItems}\n          activeChatId={this.state.activeChatId}\n          handleClick={this.handleClick}\n        />\n        <MessageList messages={this.state.messages}/>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Messenger } from \"../../components/Messenger\";\n\nexport const App: React.FC = () => <Messenger />;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}