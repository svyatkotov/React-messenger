{"version":3,"sources":["assets/images/icon.svg","components/ChatListItem/ChatListItem.tsx","components/ChatList/ChatList.tsx","components/Message/Message.tsx","components/MessageList/MessageList.tsx","components/Messenger/messengerData.ts","components/Messenger/Messenger.tsx","containers/App/App.tsx","index.tsx"],"names":["module","exports","ChatListItem","className","pushClass","props","isActive","push","join","this","onClick","handleClick","chatId","src","icon","alt","name","date","toLocaleDateString","lastMessageAuthor","lastMessagePreview","Component","ChatList","chatListItems","map","item","key","toString","activeChatId","Message","author","text","MessageList","messages","message","messageId","Date","getChatListItems","getMessages","lastMessage","length","sort","a","b","aDate","getTime","bDate","filter","Messenger","state","setState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8df3986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport { IProps } from \"./types\";\nimport icon from '../../assets/images/icon.svg';\nimport \"./ChatListItem.css\";\n\nexport default class ChatListItem extends Component<IProps> {\n  private className: string[] = [\"chat-list-item\"];\n\n  private pushClass = () => {\n    if (this.props.isActive) {\n      this.className.push(\"active\");\n      return this.className.join(\" \");\n    }\n\n    return this.className[0];\n  };\n\n  render() {\n    return (\n      <li className={this.pushClass()} onClick={this.props.handleClick(this.props.chatId)}>\n        <div className=\"chat-list-item__icon\">\n          <img src={icon} alt=\"icon\" />\n        </div>\n        <div className=\"chat-list-item__info\">\n          <div className=\"chat-list-item__title\">\n            <span className=\"chat-list-item__name\">{this.props.name}</span>\n            <span className=\"chat-list-item__date\">{this.props.date.toLocaleDateString()}</span>\n          </div>\n          <div className=\"chat-list-item__content\">\n            <span className=\"chat-list-item__author\">{`${this.props.lastMessageAuthor}:`}</span>\n            <span className=\"chat-list-item__message\">{this.props.lastMessagePreview}</span>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { IChatList } from \"./types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport ChatListItem from \"../ChatListItem\";\nimport \"./ChatList.css\";\n\nexport default class ChatList extends Component<IChatList> {\n  render() {\n    return (\n      <ul className=\"chat-list\">\n        {this.props.chatListItems.map((item: IChatListItem) => {\n          return (\n            <ChatListItem \n              key={item.chatId.toString()}\n              {...item}\n              isActive={this.props.activeChatId === item.chatId}\n              handleClick={this.props.handleClick}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { IMessage } from \"./types\";\nimport \"./Message.css\";\n\nexport default class Message extends Component<IMessage> {\n  render() {\n    return (\n      <li className=\"message\">\n        <div className=\"message__info\">\n          <div className=\"message__author\">{this.props.author}</div>\n          <div className=\"message__date\">{this.props.date.toLocaleDateString()}</div>\n        </div>\n        <div className=\"message__text\">{this.props.text}</div>\n      </li>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { IMessageList } from \"./types\";\nimport { IMessage } from \"../Message/types\";\nimport Message from \"../Message\";\nimport \"./MessageList.css\";\n\nexport default class MessageList extends Component<IMessageList> {\n  render() {\n    return (\n      <ul className=\"message-list\">\n        {this.props.messages.map((message: IMessage) => {\n          return (\n            <Message\n              key={message.messageId.toString()}\n              {...message}\n            />\n          );\n        })}\n      </ul>\n    );\n  }\n}","import { IChatListItem } from \"../ChatListItem/types\";\nimport { IMessage } from \"../Message/types\";\n\nexport const chatListItems: IChatListItem[] = [\n  {\n    chatId: 1,\n    name: \"First chat\",\n    date: new Date(2020, 4, 6),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 2,\n    name: \"Second chat\",\n    date: new Date(2020, 4, 7),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 3,\n    name: \"Third chat\",\n    date: new Date(2020, 4, 4),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  },\n  {\n    chatId: 4,\n    name: \"Fourth chat\",\n    date: new Date(2020, 4, 2),\n    lastMessageAuthor: null,\n    lastMessagePreview: null\n  }\n];\n\nexport const messages: IMessage[] = [\n  {\n    chatId: 1,\n    messageId: 1,\n    date: new Date(2020, 4, 6),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 1,\n    messageId: 2,\n    date: new Date(2020, 4, 1),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 1,\n    messageId: 3,\n    date: new Date(2020, 4, 3),\n    author: \"Slava\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 2,\n    messageId: 1,\n    date: new Date(2020, 4, 6),\n    author: \"Artem\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 2,\n    messageId: 2,\n    date: new Date(2020, 4, 7),\n    author: \"Artem\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 1,\n    date: new Date(2020, 4, 4),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 2,\n    date: new Date(2020, 4, 3),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 3,\n    date: new Date(2020, 4, 2),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 3,\n    messageId: 4,\n    date: new Date(2020, 4, 1),\n    author: \"Noel\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n  {\n    chatId: 4,\n    messageId: 1,\n    date: new Date(2020, 4, 2),\n    author: \"Vika\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur a egestas risus, eget ultricies nibh. Aliquam efficitur libero dictum, sollicitudin sapien eget, hendrerit lectus.\"\n  },\n];","import React, { Component } from \"react\";\nimport { IState, TChatId, THandleClick } from \"./types\";\nimport { IMessage } from \"../Message/types\";\nimport { IChatListItem } from \"../ChatListItem/types\";\nimport ChatList from \"../ChatList\";\nimport MessageList from \"../MessageList\";\nimport { chatListItems, messages } from \"./messengerData\";\nimport \"./Messenger.css\";\n\nconst getChatListItems = (chatListItems: IChatListItem[]): IChatListItem[] => {\n  const sortByDate = (a: IChatListItem, b: IChatListItem): number => {\n    const aDate = a.date.getTime();\n    const bDate = b.date.getTime();\n    return aDate > bDate ? -1 : aDate < bDate ? 1 : 0;\n  };\n\n  chatListItems.map((item: IChatListItem): IChatListItem => {\n    const messages: IMessage[] = getMessages(item.chatId);\n    const lastMessage: IMessage = messages[messages.length - 1];\n    \n    if (lastMessage) {\n      item.lastMessageAuthor = lastMessage.author;\n      item.lastMessagePreview = lastMessage.text;\n    }\n\n    return item;\n  });\n\n  return chatListItems.sort(sortByDate);\n};\n\nconst getMessages = (chatId: TChatId): IMessage[] => {\n  const sortByDate = (a: IMessage, b: IMessage): number => {\n    const aDate = a.date.getTime();\n    const bDate = b.date.getTime();\n    return aDate < bDate ? -1 : aDate > bDate ? 1 : 0;\n  };\n\n  const chatMessages: IMessage[] = messages\n    .filter((message) => message.chatId === chatId)\n    .sort(sortByDate);\n\n  return chatMessages;\n};\n\nexport default class Messenger extends Component {\n  readonly state: IState = {\n    activeChatId: null,\n    chatListItems: [],\n    messages: []\n  };\n  \n  componentDidMount() {\n    this.setState({\n      chatListItems: getChatListItems(chatListItems)\n    });\n  }\n\n  private handleClick: THandleClick = (chatId) => {\n    const messages: IMessage[] = getMessages(chatId);\n    return () => {\n      this.setState({\n        activeChatId: chatId,\n        messages: messages\n      });\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"messenger\">\n        <ChatList \n          chatListItems={this.state.chatListItems}\n          activeChatId={this.state.activeChatId}\n          handleClick={this.handleClick}\n        />\n        <MessageList messages={this.state.messages}/>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Messenger from \"../../components/Messenger\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Messenger />\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}